package com.android.p023dx.p026io;

import com.android.p023dx.p026io.instructions.InstructionCodec;
import com.android.p023dx.util.Hex;

/* renamed from: com.android.dx.io.OpcodeInfo */
public final class OpcodeInfo {
    public static final Info ADD_DOUBLE;
    public static final Info ADD_DOUBLE_2ADDR;
    public static final Info ADD_FLOAT;
    public static final Info ADD_FLOAT_2ADDR;
    public static final Info ADD_INT;
    public static final Info ADD_INT_2ADDR;
    public static final Info ADD_INT_LIT16;
    public static final Info ADD_INT_LIT8;
    public static final Info ADD_LONG;
    public static final Info ADD_LONG_2ADDR;
    public static final Info AGET;
    public static final Info AGET_BOOLEAN;
    public static final Info AGET_BYTE;
    public static final Info AGET_CHAR;
    public static final Info AGET_OBJECT;
    public static final Info AGET_SHORT;
    public static final Info AGET_WIDE;
    public static final Info AND_INT;
    public static final Info AND_INT_2ADDR;
    public static final Info AND_INT_LIT16;
    public static final Info AND_INT_LIT8;
    public static final Info AND_LONG;
    public static final Info AND_LONG_2ADDR;
    public static final Info APUT;
    public static final Info APUT_BOOLEAN;
    public static final Info APUT_BYTE;
    public static final Info APUT_CHAR;
    public static final Info APUT_OBJECT;
    public static final Info APUT_SHORT;
    public static final Info APUT_WIDE;
    public static final Info ARRAY_LENGTH;
    public static final Info CHECK_CAST;
    public static final Info CMPG_DOUBLE;
    public static final Info CMPG_FLOAT;
    public static final Info CMPL_DOUBLE;
    public static final Info CMPL_FLOAT;
    public static final Info CMP_LONG;
    public static final Info CONST;
    public static final Info CONST_16;
    public static final Info CONST_4;
    public static final Info CONST_CLASS;
    public static final Info CONST_HIGH16;
    public static final Info CONST_STRING;
    public static final Info CONST_STRING_JUMBO;
    public static final Info CONST_WIDE;
    public static final Info CONST_WIDE_16;
    public static final Info CONST_WIDE_32;
    public static final Info CONST_WIDE_HIGH16;
    public static final Info DIV_DOUBLE;
    public static final Info DIV_DOUBLE_2ADDR;
    public static final Info DIV_FLOAT;
    public static final Info DIV_FLOAT_2ADDR;
    public static final Info DIV_INT;
    public static final Info DIV_INT_2ADDR;
    public static final Info DIV_INT_LIT16;
    public static final Info DIV_INT_LIT8;
    public static final Info DIV_LONG;
    public static final Info DIV_LONG_2ADDR;
    public static final Info DOUBLE_TO_FLOAT;
    public static final Info DOUBLE_TO_INT;
    public static final Info DOUBLE_TO_LONG;
    public static final Info FILLED_NEW_ARRAY;
    public static final Info FILLED_NEW_ARRAY_RANGE;
    public static final Info FILL_ARRAY_DATA;
    public static final Info FILL_ARRAY_DATA_PAYLOAD;
    public static final Info FLOAT_TO_DOUBLE;
    public static final Info FLOAT_TO_INT;
    public static final Info FLOAT_TO_LONG;
    public static final Info GOTO;
    public static final Info GOTO_16;
    public static final Info GOTO_32;
    public static final Info IF_EQ;
    public static final Info IF_EQZ;
    public static final Info IF_GE;
    public static final Info IF_GEZ;
    public static final Info IF_GT;
    public static final Info IF_GTZ;
    public static final Info IF_LE;
    public static final Info IF_LEZ;
    public static final Info IF_LT;
    public static final Info IF_LTZ;
    public static final Info IF_NE;
    public static final Info IF_NEZ;
    public static final Info IGET;
    public static final Info IGET_BOOLEAN;
    public static final Info IGET_BYTE;
    public static final Info IGET_CHAR;
    public static final Info IGET_OBJECT;
    public static final Info IGET_SHORT;
    public static final Info IGET_WIDE;
    private static final Info[] INFO = new Info[65537];
    public static final Info INSTANCE_OF;
    public static final Info INT_TO_BYTE;
    public static final Info INT_TO_CHAR;
    public static final Info INT_TO_DOUBLE;
    public static final Info INT_TO_FLOAT;
    public static final Info INT_TO_LONG;
    public static final Info INT_TO_SHORT;
    public static final Info INVOKE_DIRECT;
    public static final Info INVOKE_DIRECT_RANGE;
    public static final Info INVOKE_INTERFACE;
    public static final Info INVOKE_INTERFACE_RANGE;
    public static final Info INVOKE_STATIC;
    public static final Info INVOKE_STATIC_RANGE;
    public static final Info INVOKE_SUPER;
    public static final Info INVOKE_SUPER_RANGE;
    public static final Info INVOKE_VIRTUAL;
    public static final Info INVOKE_VIRTUAL_RANGE;
    public static final Info IPUT;
    public static final Info IPUT_BOOLEAN;
    public static final Info IPUT_BYTE;
    public static final Info IPUT_CHAR;
    public static final Info IPUT_OBJECT;
    public static final Info IPUT_SHORT;
    public static final Info IPUT_WIDE;
    public static final Info LONG_TO_DOUBLE;
    public static final Info LONG_TO_FLOAT;
    public static final Info LONG_TO_INT;
    public static final Info MONITOR_ENTER;
    public static final Info MONITOR_EXIT;
    public static final Info MOVE;
    public static final Info MOVE_16;
    public static final Info MOVE_EXCEPTION;
    public static final Info MOVE_FROM16;
    public static final Info MOVE_OBJECT;
    public static final Info MOVE_OBJECT_16;
    public static final Info MOVE_OBJECT_FROM16;
    public static final Info MOVE_RESULT;
    public static final Info MOVE_RESULT_OBJECT;
    public static final Info MOVE_RESULT_WIDE;
    public static final Info MOVE_WIDE;
    public static final Info MOVE_WIDE_16;
    public static final Info MOVE_WIDE_FROM16;
    public static final Info MUL_DOUBLE;
    public static final Info MUL_DOUBLE_2ADDR;
    public static final Info MUL_FLOAT;
    public static final Info MUL_FLOAT_2ADDR;
    public static final Info MUL_INT;
    public static final Info MUL_INT_2ADDR;
    public static final Info MUL_INT_LIT16;
    public static final Info MUL_INT_LIT8;
    public static final Info MUL_LONG;
    public static final Info MUL_LONG_2ADDR;
    public static final Info NEG_DOUBLE;
    public static final Info NEG_FLOAT;
    public static final Info NEG_INT;
    public static final Info NEG_LONG;
    public static final Info NEW_ARRAY;
    public static final Info NEW_INSTANCE;
    public static final Info NOP;
    public static final Info NOT_INT;
    public static final Info NOT_LONG;
    public static final Info OR_INT;
    public static final Info OR_INT_2ADDR;
    public static final Info OR_INT_LIT16;
    public static final Info OR_INT_LIT8;
    public static final Info OR_LONG;
    public static final Info OR_LONG_2ADDR;
    public static final Info PACKED_SWITCH;
    public static final Info PACKED_SWITCH_PAYLOAD;
    public static final Info REM_DOUBLE;
    public static final Info REM_DOUBLE_2ADDR;
    public static final Info REM_FLOAT;
    public static final Info REM_FLOAT_2ADDR;
    public static final Info REM_INT;
    public static final Info REM_INT_2ADDR;
    public static final Info REM_INT_LIT16;
    public static final Info REM_INT_LIT8;
    public static final Info REM_LONG;
    public static final Info REM_LONG_2ADDR;
    public static final Info RETURN;
    public static final Info RETURN_OBJECT;
    public static final Info RETURN_VOID;
    public static final Info RETURN_WIDE;
    public static final Info RSUB_INT;
    public static final Info RSUB_INT_LIT8;
    public static final Info SGET;
    public static final Info SGET_BOOLEAN;
    public static final Info SGET_BYTE;
    public static final Info SGET_CHAR;
    public static final Info SGET_OBJECT;
    public static final Info SGET_SHORT;
    public static final Info SGET_WIDE;
    public static final Info SHL_INT;
    public static final Info SHL_INT_2ADDR;
    public static final Info SHL_INT_LIT8;
    public static final Info SHL_LONG;
    public static final Info SHL_LONG_2ADDR;
    public static final Info SHR_INT;
    public static final Info SHR_INT_2ADDR;
    public static final Info SHR_INT_LIT8;
    public static final Info SHR_LONG;
    public static final Info SHR_LONG_2ADDR;
    public static final Info SPARSE_SWITCH;
    public static final Info SPARSE_SWITCH_PAYLOAD;
    public static final Info SPECIAL_FORMAT;
    public static final Info SPUT;
    public static final Info SPUT_BOOLEAN;
    public static final Info SPUT_BYTE;
    public static final Info SPUT_CHAR;
    public static final Info SPUT_OBJECT;
    public static final Info SPUT_SHORT;
    public static final Info SPUT_WIDE;
    public static final Info SUB_DOUBLE;
    public static final Info SUB_DOUBLE_2ADDR;
    public static final Info SUB_FLOAT;
    public static final Info SUB_FLOAT_2ADDR;
    public static final Info SUB_INT;
    public static final Info SUB_INT_2ADDR;
    public static final Info SUB_LONG;
    public static final Info SUB_LONG_2ADDR;
    public static final Info THROW;
    public static final Info USHR_INT;
    public static final Info USHR_INT_2ADDR;
    public static final Info USHR_INT_LIT8;
    public static final Info USHR_LONG;
    public static final Info USHR_LONG_2ADDR;
    public static final Info XOR_INT;
    public static final Info XOR_INT_2ADDR;
    public static final Info XOR_INT_LIT16;
    public static final Info XOR_INT_LIT8;
    public static final Info XOR_LONG;
    public static final Info XOR_LONG_2ADDR;

    /* renamed from: com.android.dx.io.OpcodeInfo$Info */
    public static class Info {
        private final InstructionCodec format;
        private final IndexType indexType;
        private final String name;
        private final int opcode;

        public Info(int i, String str, InstructionCodec instructionCodec, IndexType indexType2) {
            this.opcode = i;
            this.name = str;
            this.format = instructionCodec;
            this.indexType = indexType2;
        }

        public InstructionCodec getFormat() {
            return this.format;
        }

        public IndexType getIndexType() {
            return this.indexType;
        }

        public String getName() {
            return this.name;
        }

        public int getOpcode() {
            return this.opcode;
        }
    }

    static {
        InstructionCodec instructionCodec = InstructionCodec.FORMAT_00X;
        IndexType indexType = IndexType.NONE;
        Info info = new Info(-1, "<special>", instructionCodec, indexType);
        SPECIAL_FORMAT = info;
        Info info2 = new Info(256, "packed-switch-payload", InstructionCodec.FORMAT_PACKED_SWITCH_PAYLOAD, indexType);
        PACKED_SWITCH_PAYLOAD = info2;
        Info info3 = new Info(512, "sparse-switch-payload", InstructionCodec.FORMAT_SPARSE_SWITCH_PAYLOAD, indexType);
        SPARSE_SWITCH_PAYLOAD = info3;
        Info info4 = new Info(Opcodes.FILL_ARRAY_DATA_PAYLOAD, "fill-array-data-payload", InstructionCodec.FORMAT_FILL_ARRAY_DATA_PAYLOAD, indexType);
        FILL_ARRAY_DATA_PAYLOAD = info4;
        InstructionCodec instructionCodec2 = InstructionCodec.FORMAT_10X;
        Info info5 = new Info(0, "nop", instructionCodec2, indexType);
        NOP = info5;
        InstructionCodec instructionCodec3 = InstructionCodec.FORMAT_12X;
        Info info6 = new Info(1, "move", instructionCodec3, indexType);
        MOVE = info6;
        InstructionCodec instructionCodec4 = InstructionCodec.FORMAT_22X;
        Info info7 = new Info(2, "move/from16", instructionCodec4, indexType);
        MOVE_FROM16 = info7;
        InstructionCodec instructionCodec5 = InstructionCodec.FORMAT_32X;
        Info info8 = new Info(3, "move/16", instructionCodec5, indexType);
        MOVE_16 = info8;
        Info info9 = new Info(4, "move-wide", instructionCodec3, indexType);
        MOVE_WIDE = info9;
        Info info10 = info9;
        Info info11 = new Info(5, "move-wide/from16", instructionCodec4, indexType);
        MOVE_WIDE_FROM16 = info11;
        Info info12 = info11;
        Info info13 = new Info(6, "move-wide/16", instructionCodec5, indexType);
        MOVE_WIDE_16 = info13;
        Info info14 = info13;
        Info info15 = new Info(7, "move-object", instructionCodec3, indexType);
        MOVE_OBJECT = info15;
        Info info16 = info15;
        Info info17 = new Info(8, "move-object/from16", instructionCodec4, indexType);
        MOVE_OBJECT_FROM16 = info17;
        Info info18 = new Info(9, "move-object/16", instructionCodec5, indexType);
        MOVE_OBJECT_16 = info18;
        InstructionCodec instructionCodec6 = InstructionCodec.FORMAT_11X;
        Info info19 = info18;
        Info info20 = new Info(10, "move-result", instructionCodec6, indexType);
        MOVE_RESULT = info20;
        Info info21 = info20;
        Info info22 = new Info(11, "move-result-wide", instructionCodec6, indexType);
        MOVE_RESULT_WIDE = info22;
        Info info23 = info22;
        Info info24 = new Info(12, "move-result-object", instructionCodec6, indexType);
        MOVE_RESULT_OBJECT = info24;
        Info info25 = info24;
        Info info26 = new Info(13, "move-exception", instructionCodec6, indexType);
        MOVE_EXCEPTION = info26;
        Info info27 = info26;
        Info info28 = new Info(14, "return-void", instructionCodec2, indexType);
        RETURN_VOID = info28;
        Info info29 = new Info(15, "return", instructionCodec6, indexType);
        RETURN = info29;
        Info info30 = info29;
        Info info31 = new Info(16, "return-wide", instructionCodec6, indexType);
        RETURN_WIDE = info31;
        Info info32 = info31;
        Info info33 = new Info(17, "return-object", instructionCodec6, indexType);
        RETURN_OBJECT = info33;
        Info info34 = info33;
        Info info35 = info28;
        Info info36 = new Info(18, "const/4", InstructionCodec.FORMAT_11N, indexType);
        CONST_4 = info36;
        InstructionCodec instructionCodec7 = InstructionCodec.FORMAT_21S;
        Info info37 = info36;
        Info info38 = new Info(19, "const/16", instructionCodec7, indexType);
        CONST_16 = info38;
        InstructionCodec instructionCodec8 = InstructionCodec.FORMAT_31I;
        Info info39 = info38;
        Info info40 = info17;
        Info info41 = new Info(20, "const", instructionCodec8, indexType);
        CONST = info41;
        InstructionCodec instructionCodec9 = InstructionCodec.FORMAT_21H;
        Info info42 = info41;
        Info info43 = info8;
        Info info44 = new Info(21, "const/high16", instructionCodec9, indexType);
        CONST_HIGH16 = info44;
        Info info45 = info44;
        Info info46 = new Info(22, "const-wide/16", instructionCodec7, indexType);
        CONST_WIDE_16 = info46;
        Info info47 = new Info(23, "const-wide/32", instructionCodec8, indexType);
        CONST_WIDE_32 = info47;
        Info info48 = info47;
        Info info49 = new Info(24, "const-wide", InstructionCodec.FORMAT_51L, indexType);
        CONST_WIDE = info49;
        Info info50 = new Info(25, "const-wide/high16", instructionCodec9, indexType);
        CONST_WIDE_HIGH16 = info50;
        InstructionCodec instructionCodec10 = InstructionCodec.FORMAT_21C;
        IndexType indexType2 = IndexType.STRING_REF;
        Info info51 = info50;
        Info info52 = info49;
        Info info53 = new Info(26, "const-string", instructionCodec10, indexType2);
        CONST_STRING = info53;
        Info info54 = info53;
        Info info55 = info46;
        Info info56 = new Info(27, "const-string/jumbo", InstructionCodec.FORMAT_31C, indexType2);
        CONST_STRING_JUMBO = info56;
        IndexType indexType3 = IndexType.TYPE_REF;
        Info info57 = new Info(28, "const-class", instructionCodec10, indexType3);
        CONST_CLASS = info57;
        Info info58 = info57;
        Info info59 = new Info(29, "monitor-enter", instructionCodec6, indexType);
        MONITOR_ENTER = info59;
        Info info60 = info59;
        Info info61 = new Info(30, "monitor-exit", instructionCodec6, indexType);
        MONITOR_EXIT = info61;
        Info info62 = info61;
        Info info63 = new Info(31, "check-cast", instructionCodec10, indexType3);
        CHECK_CAST = info63;
        InstructionCodec instructionCodec11 = InstructionCodec.FORMAT_22C;
        Info info64 = info63;
        Info info65 = info56;
        Info info66 = new Info(32, "instance-of", instructionCodec11, indexType3);
        INSTANCE_OF = info66;
        Info info67 = info66;
        Info info68 = new Info(33, "array-length", instructionCodec3, indexType);
        ARRAY_LENGTH = info68;
        Info info69 = info68;
        Info info70 = new Info(34, "new-instance", instructionCodec10, indexType3);
        NEW_INSTANCE = info70;
        Info info71 = info70;
        Info info72 = new Info(35, "new-array", instructionCodec11, indexType3);
        NEW_ARRAY = info72;
        InstructionCodec instructionCodec12 = InstructionCodec.FORMAT_35C;
        Info info73 = info72;
        Info info74 = info7;
        Info info75 = new Info(36, "filled-new-array", instructionCodec12, indexType3);
        FILLED_NEW_ARRAY = info75;
        InstructionCodec instructionCodec13 = InstructionCodec.FORMAT_3RC;
        Info info76 = info75;
        Info info77 = info6;
        Info info78 = new Info(37, "filled-new-array/range", instructionCodec13, indexType3);
        FILLED_NEW_ARRAY_RANGE = info78;
        InstructionCodec instructionCodec14 = InstructionCodec.FORMAT_31T;
        Info info79 = info78;
        Info info80 = new Info(38, "fill-array-data", instructionCodec14, indexType);
        FILL_ARRAY_DATA = info80;
        Info info81 = info80;
        Info info82 = new Info(39, "throw", instructionCodec6, indexType);
        THROW = info82;
        Info info83 = info82;
        Info info84 = new Info(40, "goto", InstructionCodec.FORMAT_10T, indexType);
        GOTO = info84;
        Info info85 = info84;
        Info info86 = new Info(41, "goto/16", InstructionCodec.FORMAT_20T, indexType);
        GOTO_16 = info86;
        Info info87 = info86;
        Info info88 = new Info(42, "goto/32", InstructionCodec.FORMAT_30T, indexType);
        GOTO_32 = info88;
        Info info89 = new Info(43, "packed-switch", instructionCodec14, indexType);
        PACKED_SWITCH = info89;
        Info info90 = info89;
        Info info91 = new Info(44, "sparse-switch", instructionCodec14, indexType);
        SPARSE_SWITCH = info91;
        InstructionCodec instructionCodec15 = InstructionCodec.FORMAT_23X;
        Info info92 = info91;
        Info info93 = new Info(45, "cmpl-float", instructionCodec15, indexType);
        CMPL_FLOAT = info93;
        Info info94 = info93;
        Info info95 = new Info(46, "cmpg-float", instructionCodec15, indexType);
        CMPG_FLOAT = info95;
        Info info96 = info95;
        Info info97 = new Info(47, "cmpl-double", instructionCodec15, indexType);
        CMPL_DOUBLE = info97;
        Info info98 = info97;
        Info info99 = new Info(48, "cmpg-double", instructionCodec15, indexType);
        CMPG_DOUBLE = info99;
        Info info100 = info99;
        Info info101 = new Info(49, "cmp-long", instructionCodec15, indexType);
        CMP_LONG = info101;
        InstructionCodec instructionCodec16 = InstructionCodec.FORMAT_22T;
        Info info102 = info101;
        Info info103 = info88;
        Info info104 = new Info(50, "if-eq", instructionCodec16, indexType);
        IF_EQ = info104;
        Info info105 = info104;
        Info info106 = new Info(51, "if-ne", instructionCodec16, indexType);
        IF_NE = info106;
        Info info107 = info106;
        Info info108 = new Info(52, "if-lt", instructionCodec16, indexType);
        IF_LT = info108;
        Info info109 = info108;
        Info info110 = new Info(53, "if-ge", instructionCodec16, indexType);
        IF_GE = info110;
        Info info111 = info110;
        Info info112 = new Info(54, "if-gt", instructionCodec16, indexType);
        IF_GT = info112;
        Info info113 = info112;
        Info info114 = new Info(55, "if-le", instructionCodec16, indexType);
        IF_LE = info114;
        InstructionCodec instructionCodec17 = InstructionCodec.FORMAT_21T;
        Info info115 = info114;
        Info info116 = new Info(56, "if-eqz", instructionCodec17, indexType);
        IF_EQZ = info116;
        Info info117 = info116;
        Info info118 = new Info(57, "if-nez", instructionCodec17, indexType);
        IF_NEZ = info118;
        Info info119 = info118;
        Info info120 = new Info(58, "if-ltz", instructionCodec17, indexType);
        IF_LTZ = info120;
        Info info121 = info120;
        Info info122 = new Info(59, "if-gez", instructionCodec17, indexType);
        IF_GEZ = info122;
        Info info123 = info122;
        Info info124 = new Info(60, "if-gtz", instructionCodec17, indexType);
        IF_GTZ = info124;
        Info info125 = info124;
        Info info126 = new Info(61, "if-lez", instructionCodec17, indexType);
        IF_LEZ = info126;
        Info info127 = new Info(68, "aget", instructionCodec15, indexType);
        AGET = info127;
        Info info128 = info127;
        Info info129 = new Info(69, "aget-wide", instructionCodec15, indexType);
        AGET_WIDE = info129;
        Info info130 = info129;
        Info info131 = new Info(70, "aget-object", instructionCodec15, indexType);
        AGET_OBJECT = info131;
        Info info132 = info131;
        Info info133 = new Info(71, "aget-boolean", instructionCodec15, indexType);
        AGET_BOOLEAN = info133;
        Info info134 = info133;
        Info info135 = new Info(72, "aget-byte", instructionCodec15, indexType);
        AGET_BYTE = info135;
        Info info136 = info135;
        Info info137 = new Info(73, "aget-char", instructionCodec15, indexType);
        AGET_CHAR = info137;
        Info info138 = info137;
        Info info139 = new Info(74, "aget-short", instructionCodec15, indexType);
        AGET_SHORT = info139;
        Info info140 = info139;
        Info info141 = new Info(75, "aput", instructionCodec15, indexType);
        APUT = info141;
        Info info142 = info141;
        Info info143 = new Info(76, "aput-wide", instructionCodec15, indexType);
        APUT_WIDE = info143;
        Info info144 = info143;
        Info info145 = new Info(77, "aput-object", instructionCodec15, indexType);
        APUT_OBJECT = info145;
        Info info146 = info145;
        Info info147 = new Info(78, "aput-boolean", instructionCodec15, indexType);
        APUT_BOOLEAN = info147;
        Info info148 = info147;
        Info info149 = new Info(79, "aput-byte", instructionCodec15, indexType);
        APUT_BYTE = info149;
        Info info150 = info149;
        Info info151 = new Info(80, "aput-char", instructionCodec15, indexType);
        APUT_CHAR = info151;
        Info info152 = info151;
        Info info153 = new Info(81, "aput-short", instructionCodec15, indexType);
        APUT_SHORT = info153;
        IndexType indexType4 = IndexType.FIELD_REF;
        Info info154 = info153;
        Info info155 = info126;
        Info info156 = new Info(82, "iget", instructionCodec11, indexType4);
        IGET = info156;
        Info info157 = info156;
        Info info158 = new Info(83, "iget-wide", instructionCodec11, indexType4);
        IGET_WIDE = info158;
        Info info159 = info158;
        Info info160 = new Info(84, "iget-object", instructionCodec11, indexType4);
        IGET_OBJECT = info160;
        Info info161 = info160;
        Info info162 = new Info(85, "iget-boolean", instructionCodec11, indexType4);
        IGET_BOOLEAN = info162;
        Info info163 = info162;
        Info info164 = new Info(86, "iget-byte", instructionCodec11, indexType4);
        IGET_BYTE = info164;
        Info info165 = info164;
        Info info166 = new Info(87, "iget-char", instructionCodec11, indexType4);
        IGET_CHAR = info166;
        Info info167 = info166;
        Info info168 = new Info(88, "iget-short", instructionCodec11, indexType4);
        IGET_SHORT = info168;
        Info info169 = info168;
        Info info170 = new Info(89, "iput", instructionCodec11, indexType4);
        IPUT = info170;
        Info info171 = info170;
        Info info172 = new Info(90, "iput-wide", instructionCodec11, indexType4);
        IPUT_WIDE = info172;
        Info info173 = info172;
        Info info174 = new Info(91, "iput-object", instructionCodec11, indexType4);
        IPUT_OBJECT = info174;
        Info info175 = info174;
        Info info176 = new Info(92, "iput-boolean", instructionCodec11, indexType4);
        IPUT_BOOLEAN = info176;
        Info info177 = info176;
        Info info178 = new Info(93, "iput-byte", instructionCodec11, indexType4);
        IPUT_BYTE = info178;
        Info info179 = info178;
        Info info180 = new Info(94, "iput-char", instructionCodec11, indexType4);
        IPUT_CHAR = info180;
        Info info181 = info180;
        Info info182 = new Info(95, "iput-short", instructionCodec11, indexType4);
        IPUT_SHORT = info182;
        Info info183 = new Info(96, "sget", instructionCodec10, indexType4);
        SGET = info183;
        Info info184 = info183;
        Info info185 = new Info(97, "sget-wide", instructionCodec10, indexType4);
        SGET_WIDE = info185;
        Info info186 = info185;
        Info info187 = new Info(98, "sget-object", instructionCodec10, indexType4);
        SGET_OBJECT = info187;
        Info info188 = info187;
        Info info189 = new Info(99, "sget-boolean", instructionCodec10, indexType4);
        SGET_BOOLEAN = info189;
        Info info190 = info189;
        Info info191 = new Info(100, "sget-byte", instructionCodec10, indexType4);
        SGET_BYTE = info191;
        Info info192 = info191;
        Info info193 = new Info(101, "sget-char", instructionCodec10, indexType4);
        SGET_CHAR = info193;
        Info info194 = info193;
        Info info195 = new Info(102, "sget-short", instructionCodec10, indexType4);
        SGET_SHORT = info195;
        Info info196 = info195;
        Info info197 = new Info(103, "sput", instructionCodec10, indexType4);
        SPUT = info197;
        Info info198 = info197;
        Info info199 = new Info(104, "sput-wide", instructionCodec10, indexType4);
        SPUT_WIDE = info199;
        Info info200 = info199;
        Info info201 = new Info(105, "sput-object", instructionCodec10, indexType4);
        SPUT_OBJECT = info201;
        Info info202 = info201;
        Info info203 = new Info(106, "sput-boolean", instructionCodec10, indexType4);
        SPUT_BOOLEAN = info203;
        Info info204 = info203;
        Info info205 = new Info(107, "sput-byte", instructionCodec10, indexType4);
        SPUT_BYTE = info205;
        Info info206 = info205;
        Info info207 = new Info(108, "sput-char", instructionCodec10, indexType4);
        SPUT_CHAR = info207;
        Info info208 = info207;
        Info info209 = new Info(109, "sput-short", instructionCodec10, indexType4);
        SPUT_SHORT = info209;
        IndexType indexType5 = IndexType.METHOD_REF;
        Info info210 = new Info(110, "invoke-virtual", instructionCodec12, indexType5);
        INVOKE_VIRTUAL = info210;
        Info info211 = info210;
        Info info212 = new Info(111, "invoke-super", instructionCodec12, indexType5);
        INVOKE_SUPER = info212;
        Info info213 = info212;
        Info info214 = new Info(112, "invoke-direct", instructionCodec12, indexType5);
        INVOKE_DIRECT = info214;
        Info info215 = info214;
        Info info216 = new Info(113, "invoke-static", instructionCodec12, indexType5);
        INVOKE_STATIC = info216;
        Info info217 = info216;
        Info info218 = new Info(114, "invoke-interface", instructionCodec12, indexType5);
        INVOKE_INTERFACE = info218;
        Info info219 = new Info(116, "invoke-virtual/range", instructionCodec13, indexType5);
        INVOKE_VIRTUAL_RANGE = info219;
        Info info220 = info219;
        Info info221 = new Info(117, "invoke-super/range", instructionCodec13, indexType5);
        INVOKE_SUPER_RANGE = info221;
        Info info222 = info221;
        Info info223 = new Info(118, "invoke-direct/range", instructionCodec13, indexType5);
        INVOKE_DIRECT_RANGE = info223;
        Info info224 = info223;
        Info info225 = new Info(119, "invoke-static/range", instructionCodec13, indexType5);
        INVOKE_STATIC_RANGE = info225;
        Info info226 = info225;
        Info info227 = new Info(120, "invoke-interface/range", instructionCodec13, indexType5);
        INVOKE_INTERFACE_RANGE = info227;
        Info info228 = new Info(123, "neg-int", instructionCodec3, indexType);
        NEG_INT = info228;
        Info info229 = new Info(124, "not-int", instructionCodec3, indexType);
        NOT_INT = info229;
        Info info230 = info229;
        Info info231 = new Info(125, "neg-long", instructionCodec3, indexType);
        NEG_LONG = info231;
        Info info232 = info231;
        Info info233 = new Info(126, "not-long", instructionCodec3, indexType);
        NOT_LONG = info233;
        Info info234 = info233;
        Info info235 = new Info(127, "neg-float", instructionCodec3, indexType);
        NEG_FLOAT = info235;
        Info info236 = info235;
        Info info237 = new Info(128, "neg-double", instructionCodec3, indexType);
        NEG_DOUBLE = info237;
        Info info238 = info237;
        Info info239 = new Info(129, "int-to-long", instructionCodec3, indexType);
        INT_TO_LONG = info239;
        Info info240 = info239;
        Info info241 = new Info(130, "int-to-float", instructionCodec3, indexType);
        INT_TO_FLOAT = info241;
        Info info242 = info241;
        Info info243 = new Info(131, "int-to-double", instructionCodec3, indexType);
        INT_TO_DOUBLE = info243;
        Info info244 = info243;
        Info info245 = new Info(132, "long-to-int", instructionCodec3, indexType);
        LONG_TO_INT = info245;
        Info info246 = info245;
        Info info247 = new Info(133, "long-to-float", instructionCodec3, indexType);
        LONG_TO_FLOAT = info247;
        Info info248 = info247;
        Info info249 = new Info(134, "long-to-double", instructionCodec3, indexType);
        LONG_TO_DOUBLE = info249;
        Info info250 = info249;
        Info info251 = new Info(135, "float-to-int", instructionCodec3, indexType);
        FLOAT_TO_INT = info251;
        Info info252 = info251;
        Info info253 = new Info(136, "float-to-long", instructionCodec3, indexType);
        FLOAT_TO_LONG = info253;
        Info info254 = info253;
        Info info255 = new Info(137, "float-to-double", instructionCodec3, indexType);
        FLOAT_TO_DOUBLE = info255;
        Info info256 = info255;
        Info info257 = new Info(138, "double-to-int", instructionCodec3, indexType);
        DOUBLE_TO_INT = info257;
        Info info258 = info257;
        Info info259 = new Info(139, "double-to-long", instructionCodec3, indexType);
        DOUBLE_TO_LONG = info259;
        Info info260 = info259;
        Info info261 = new Info(140, "double-to-float", instructionCodec3, indexType);
        DOUBLE_TO_FLOAT = info261;
        Info info262 = info261;
        Info info263 = new Info(141, "int-to-byte", instructionCodec3, indexType);
        INT_TO_BYTE = info263;
        Info info264 = info263;
        Info info265 = new Info(142, "int-to-char", instructionCodec3, indexType);
        INT_TO_CHAR = info265;
        Info info266 = info265;
        Info info267 = new Info(143, "int-to-short", instructionCodec3, indexType);
        INT_TO_SHORT = info267;
        Info info268 = info267;
        Info info269 = new Info(144, "add-int", instructionCodec15, indexType);
        ADD_INT = info269;
        Info info270 = info269;
        Info info271 = new Info(145, "sub-int", instructionCodec15, indexType);
        SUB_INT = info271;
        Info info272 = info271;
        Info info273 = new Info(146, "mul-int", instructionCodec15, indexType);
        MUL_INT = info273;
        Info info274 = info273;
        Info info275 = new Info(147, "div-int", instructionCodec15, indexType);
        DIV_INT = info275;
        Info info276 = info275;
        Info info277 = new Info(148, "rem-int", instructionCodec15, indexType);
        REM_INT = info277;
        Info info278 = info277;
        Info info279 = new Info(149, "and-int", instructionCodec15, indexType);
        AND_INT = info279;
        Info info280 = info279;
        Info info281 = new Info(150, "or-int", instructionCodec15, indexType);
        OR_INT = info281;
        Info info282 = info281;
        Info info283 = new Info(151, "xor-int", instructionCodec15, indexType);
        XOR_INT = info283;
        Info info284 = info283;
        Info info285 = new Info(152, "shl-int", instructionCodec15, indexType);
        SHL_INT = info285;
        Info info286 = info285;
        Info info287 = new Info(153, "shr-int", instructionCodec15, indexType);
        SHR_INT = info287;
        Info info288 = info287;
        Info info289 = new Info(154, "ushr-int", instructionCodec15, indexType);
        USHR_INT = info289;
        Info info290 = info289;
        Info info291 = new Info(155, "add-long", instructionCodec15, indexType);
        ADD_LONG = info291;
        Info info292 = info291;
        Info info293 = new Info(156, "sub-long", instructionCodec15, indexType);
        SUB_LONG = info293;
        Info info294 = info293;
        Info info295 = new Info(157, "mul-long", instructionCodec15, indexType);
        MUL_LONG = info295;
        Info info296 = info295;
        Info info297 = new Info(158, "div-long", instructionCodec15, indexType);
        DIV_LONG = info297;
        Info info298 = info297;
        Info info299 = new Info(159, "rem-long", instructionCodec15, indexType);
        REM_LONG = info299;
        Info info300 = info299;
        Info info301 = new Info(160, "and-long", instructionCodec15, indexType);
        AND_LONG = info301;
        Info info302 = info301;
        Info info303 = new Info(161, "or-long", instructionCodec15, indexType);
        OR_LONG = info303;
        Info info304 = info303;
        Info info305 = new Info(162, "xor-long", instructionCodec15, indexType);
        XOR_LONG = info305;
        Info info306 = info305;
        Info info307 = new Info(163, "shl-long", instructionCodec15, indexType);
        SHL_LONG = info307;
        Info info308 = info307;
        Info info309 = new Info(164, "shr-long", instructionCodec15, indexType);
        SHR_LONG = info309;
        Info info310 = info309;
        Info info311 = new Info(165, "ushr-long", instructionCodec15, indexType);
        USHR_LONG = info311;
        Info info312 = info311;
        Info info313 = new Info(166, "add-float", instructionCodec15, indexType);
        ADD_FLOAT = info313;
        Info info314 = info313;
        Info info315 = new Info(167, "sub-float", instructionCodec15, indexType);
        SUB_FLOAT = info315;
        Info info316 = info315;
        Info info317 = new Info(168, "mul-float", instructionCodec15, indexType);
        MUL_FLOAT = info317;
        Info info318 = info317;
        Info info319 = new Info(169, "div-float", instructionCodec15, indexType);
        DIV_FLOAT = info319;
        Info info320 = info319;
        Info info321 = new Info(170, "rem-float", instructionCodec15, indexType);
        REM_FLOAT = info321;
        Info info322 = info321;
        Info info323 = new Info(171, "add-double", instructionCodec15, indexType);
        ADD_DOUBLE = info323;
        Info info324 = info323;
        Info info325 = new Info(172, "sub-double", instructionCodec15, indexType);
        SUB_DOUBLE = info325;
        Info info326 = info325;
        Info info327 = new Info(173, "mul-double", instructionCodec15, indexType);
        MUL_DOUBLE = info327;
        Info info328 = info327;
        Info info329 = new Info(174, "div-double", instructionCodec15, indexType);
        DIV_DOUBLE = info329;
        Info info330 = info329;
        Info info331 = new Info(175, "rem-double", instructionCodec15, indexType);
        REM_DOUBLE = info331;
        Info info332 = new Info(176, "add-int/2addr", instructionCodec3, indexType);
        ADD_INT_2ADDR = info332;
        Info info333 = info332;
        Info info334 = new Info(177, "sub-int/2addr", instructionCodec3, indexType);
        SUB_INT_2ADDR = info334;
        Info info335 = info334;
        Info info336 = new Info(178, "mul-int/2addr", instructionCodec3, indexType);
        MUL_INT_2ADDR = info336;
        Info info337 = info336;
        Info info338 = new Info(179, "div-int/2addr", instructionCodec3, indexType);
        DIV_INT_2ADDR = info338;
        Info info339 = info338;
        Info info340 = new Info(180, "rem-int/2addr", instructionCodec3, indexType);
        REM_INT_2ADDR = info340;
        Info info341 = info340;
        Info info342 = new Info(181, "and-int/2addr", instructionCodec3, indexType);
        AND_INT_2ADDR = info342;
        Info info343 = info342;
        Info info344 = new Info(182, "or-int/2addr", instructionCodec3, indexType);
        OR_INT_2ADDR = info344;
        Info info345 = info344;
        Info info346 = new Info(183, "xor-int/2addr", instructionCodec3, indexType);
        XOR_INT_2ADDR = info346;
        Info info347 = info346;
        Info info348 = new Info(184, "shl-int/2addr", instructionCodec3, indexType);
        SHL_INT_2ADDR = info348;
        Info info349 = info348;
        Info info350 = new Info(185, "shr-int/2addr", instructionCodec3, indexType);
        SHR_INT_2ADDR = info350;
        Info info351 = info350;
        Info info352 = new Info(186, "ushr-int/2addr", instructionCodec3, indexType);
        USHR_INT_2ADDR = info352;
        Info info353 = info352;
        Info info354 = new Info(187, "add-long/2addr", instructionCodec3, indexType);
        ADD_LONG_2ADDR = info354;
        Info info355 = info354;
        Info info356 = new Info(188, "sub-long/2addr", instructionCodec3, indexType);
        SUB_LONG_2ADDR = info356;
        Info info357 = info356;
        Info info358 = new Info(189, "mul-long/2addr", instructionCodec3, indexType);
        MUL_LONG_2ADDR = info358;
        Info info359 = info358;
        Info info360 = new Info(190, "div-long/2addr", instructionCodec3, indexType);
        DIV_LONG_2ADDR = info360;
        Info info361 = info360;
        Info info362 = new Info(191, "rem-long/2addr", instructionCodec3, indexType);
        REM_LONG_2ADDR = info362;
        Info info363 = info362;
        Info info364 = new Info(192, "and-long/2addr", instructionCodec3, indexType);
        AND_LONG_2ADDR = info364;
        Info info365 = info364;
        Info info366 = new Info(193, "or-long/2addr", instructionCodec3, indexType);
        OR_LONG_2ADDR = info366;
        Info info367 = info366;
        Info info368 = new Info(194, "xor-long/2addr", instructionCodec3, indexType);
        XOR_LONG_2ADDR = info368;
        Info info369 = info368;
        Info info370 = new Info(195, "shl-long/2addr", instructionCodec3, indexType);
        SHL_LONG_2ADDR = info370;
        Info info371 = info370;
        Info info372 = new Info(196, "shr-long/2addr", instructionCodec3, indexType);
        SHR_LONG_2ADDR = info372;
        Info info373 = info372;
        Info info374 = new Info(197, "ushr-long/2addr", instructionCodec3, indexType);
        USHR_LONG_2ADDR = info374;
        Info info375 = info374;
        Info info376 = new Info(198, "add-float/2addr", instructionCodec3, indexType);
        ADD_FLOAT_2ADDR = info376;
        Info info377 = info376;
        Info info378 = new Info(199, "sub-float/2addr", instructionCodec3, indexType);
        SUB_FLOAT_2ADDR = info378;
        Info info379 = info378;
        Info info380 = new Info(200, "mul-float/2addr", instructionCodec3, indexType);
        MUL_FLOAT_2ADDR = info380;
        Info info381 = info380;
        Info info382 = new Info(201, "div-float/2addr", instructionCodec3, indexType);
        DIV_FLOAT_2ADDR = info382;
        Info info383 = info382;
        Info info384 = new Info(202, "rem-float/2addr", instructionCodec3, indexType);
        REM_FLOAT_2ADDR = info384;
        Info info385 = info384;
        Info info386 = new Info(203, "add-double/2addr", instructionCodec3, indexType);
        ADD_DOUBLE_2ADDR = info386;
        Info info387 = info386;
        Info info388 = new Info(204, "sub-double/2addr", instructionCodec3, indexType);
        SUB_DOUBLE_2ADDR = info388;
        Info info389 = info388;
        Info info390 = new Info(205, "mul-double/2addr", instructionCodec3, indexType);
        MUL_DOUBLE_2ADDR = info390;
        Info info391 = info390;
        Info info392 = new Info(206, "div-double/2addr", instructionCodec3, indexType);
        DIV_DOUBLE_2ADDR = info392;
        Info info393 = info392;
        Info info394 = new Info(207, "rem-double/2addr", instructionCodec3, indexType);
        REM_DOUBLE_2ADDR = info394;
        InstructionCodec instructionCodec18 = InstructionCodec.FORMAT_22S;
        Info info395 = info394;
        Info info396 = new Info(Opcodes.ADD_INT_LIT16, "add-int/lit16", instructionCodec18, indexType);
        ADD_INT_LIT16 = info396;
        Info info397 = info396;
        Info info398 = new Info(Opcodes.RSUB_INT, "rsub-int", instructionCodec18, indexType);
        RSUB_INT = info398;
        Info info399 = info398;
        Info info400 = new Info(Opcodes.MUL_INT_LIT16, "mul-int/lit16", instructionCodec18, indexType);
        MUL_INT_LIT16 = info400;
        Info info401 = info400;
        Info info402 = new Info(Opcodes.DIV_INT_LIT16, "div-int/lit16", instructionCodec18, indexType);
        DIV_INT_LIT16 = info402;
        Info info403 = info402;
        Info info404 = new Info(Opcodes.REM_INT_LIT16, "rem-int/lit16", instructionCodec18, indexType);
        REM_INT_LIT16 = info404;
        Info info405 = info404;
        Info info406 = new Info(Opcodes.AND_INT_LIT16, "and-int/lit16", instructionCodec18, indexType);
        AND_INT_LIT16 = info406;
        Info info407 = info406;
        Info info408 = new Info(Opcodes.OR_INT_LIT16, "or-int/lit16", instructionCodec18, indexType);
        OR_INT_LIT16 = info408;
        Info info409 = info408;
        Info info410 = new Info(Opcodes.XOR_INT_LIT16, "xor-int/lit16", instructionCodec18, indexType);
        XOR_INT_LIT16 = info410;
        InstructionCodec instructionCodec19 = InstructionCodec.FORMAT_22B;
        Info info411 = info410;
        Info info412 = new Info(Opcodes.ADD_INT_LIT8, "add-int/lit8", instructionCodec19, indexType);
        ADD_INT_LIT8 = info412;
        Info info413 = info412;
        Info info414 = new Info(Opcodes.RSUB_INT_LIT8, "rsub-int/lit8", instructionCodec19, indexType);
        RSUB_INT_LIT8 = info414;
        Info info415 = info414;
        Info info416 = new Info(Opcodes.MUL_INT_LIT8, "mul-int/lit8", instructionCodec19, indexType);
        MUL_INT_LIT8 = info416;
        Info info417 = info416;
        Info info418 = new Info(Opcodes.DIV_INT_LIT8, "div-int/lit8", instructionCodec19, indexType);
        DIV_INT_LIT8 = info418;
        Info info419 = info418;
        Info info420 = new Info(Opcodes.REM_INT_LIT8, "rem-int/lit8", instructionCodec19, indexType);
        REM_INT_LIT8 = info420;
        Info info421 = info420;
        Info info422 = new Info(Opcodes.AND_INT_LIT8, "and-int/lit8", instructionCodec19, indexType);
        AND_INT_LIT8 = info422;
        Info info423 = info422;
        Info info424 = new Info(Opcodes.OR_INT_LIT8, "or-int/lit8", instructionCodec19, indexType);
        OR_INT_LIT8 = info424;
        Info info425 = info424;
        Info info426 = new Info(Opcodes.XOR_INT_LIT8, "xor-int/lit8", instructionCodec19, indexType);
        XOR_INT_LIT8 = info426;
        Info info427 = info426;
        Info info428 = new Info(Opcodes.SHL_INT_LIT8, "shl-int/lit8", instructionCodec19, indexType);
        SHL_INT_LIT8 = info428;
        Info info429 = info428;
        Info info430 = new Info(Opcodes.SHR_INT_LIT8, "shr-int/lit8", instructionCodec19, indexType);
        SHR_INT_LIT8 = info430;
        Info info431 = new Info(Opcodes.USHR_INT_LIT8, "ushr-int/lit8", instructionCodec19, indexType);
        USHR_INT_LIT8 = info431;
        set(info);
        set(info2);
        set(info3);
        set(info4);
        set(info5);
        set(info77);
        set(info74);
        set(info43);
        set(info10);
        set(info12);
        set(info14);
        set(info16);
        set(info40);
        set(info19);
        set(info21);
        set(info23);
        set(info25);
        set(info27);
        set(info35);
        set(info30);
        set(info32);
        set(info34);
        set(info37);
        set(info39);
        set(info42);
        set(info45);
        set(info55);
        set(info48);
        set(info52);
        set(info51);
        set(info54);
        set(info65);
        set(info58);
        set(info60);
        set(info62);
        set(info64);
        set(info67);
        set(info69);
        set(info71);
        set(info73);
        set(info76);
        set(info79);
        set(info81);
        set(info83);
        set(info85);
        set(info87);
        set(info103);
        set(info90);
        set(info92);
        set(info94);
        set(info96);
        set(info98);
        set(info100);
        set(info102);
        set(info105);
        set(info107);
        set(info109);
        set(info111);
        set(info113);
        set(info115);
        set(info117);
        set(info119);
        set(info121);
        set(info123);
        set(info125);
        set(info155);
        set(info128);
        set(info130);
        set(info132);
        set(info134);
        set(info136);
        set(info138);
        set(info140);
        set(info142);
        set(info144);
        set(info146);
        set(info148);
        set(info150);
        set(info152);
        set(info154);
        set(info157);
        set(info159);
        set(info161);
        set(info163);
        set(info165);
        set(info167);
        set(info169);
        set(info171);
        set(info173);
        set(info175);
        set(info177);
        set(info179);
        set(info181);
        set(info182);
        set(info184);
        set(info186);
        set(info188);
        set(info190);
        set(info192);
        set(info194);
        set(info196);
        set(info198);
        set(info200);
        set(info202);
        set(info204);
        set(info206);
        set(info208);
        set(info209);
        set(info211);
        set(info213);
        set(info215);
        set(info217);
        set(info218);
        set(info220);
        set(info222);
        set(info224);
        set(info226);
        set(info227);
        set(info228);
        set(info230);
        set(info232);
        set(info234);
        set(info236);
        set(info238);
        set(info240);
        set(info242);
        set(info244);
        set(info246);
        set(info248);
        set(info250);
        set(info252);
        set(info254);
        set(info256);
        set(info258);
        set(info260);
        set(info262);
        set(info264);
        set(info266);
        set(info268);
        set(info270);
        set(info272);
        set(info274);
        set(info276);
        set(info278);
        set(info280);
        set(info282);
        set(info284);
        set(info286);
        set(info288);
        set(info290);
        set(info292);
        set(info294);
        set(info296);
        set(info298);
        set(info300);
        set(info302);
        set(info304);
        set(info306);
        set(info308);
        set(info310);
        set(info312);
        set(info314);
        set(info316);
        set(info318);
        set(info320);
        set(info322);
        set(info324);
        set(info326);
        set(info328);
        set(info330);
        set(info331);
        set(info333);
        set(info335);
        set(info337);
        set(info339);
        set(info341);
        set(info343);
        set(info345);
        set(info347);
        set(info349);
        set(info351);
        set(info353);
        set(info355);
        set(info357);
        set(info359);
        set(info361);
        set(info363);
        set(info365);
        set(info367);
        set(info369);
        set(info371);
        set(info373);
        set(info375);
        set(info377);
        set(info379);
        set(info381);
        set(info383);
        set(info385);
        set(info387);
        set(info389);
        set(info391);
        set(info393);
        set(info395);
        set(info397);
        set(info399);
        set(info401);
        set(info403);
        set(info405);
        set(info407);
        set(info409);
        set(info411);
        set(info413);
        set(info415);
        set(info417);
        set(info419);
        set(info421);
        set(info423);
        set(info425);
        set(info427);
        set(info429);
        set(info430);
        set(info431);
    }

    private OpcodeInfo() {
    }

    public static Info get(int i) {
        try {
            Info info = INFO[i + 1];
            if (info != null) {
                return info;
            }
        } catch (ArrayIndexOutOfBoundsException unused) {
        }
        throw new IllegalArgumentException("bogus opcode: " + Hex.u2or4(i));
    }

    public static InstructionCodec getFormat(int i) {
        return get(i).getFormat();
    }

    public static IndexType getIndexType(int i) {
        return get(i).getIndexType();
    }

    public static String getName(int i) {
        return get(i).getName();
    }

    private static void set(Info info) {
        INFO[info.getOpcode() + 1] = info;
    }
}
